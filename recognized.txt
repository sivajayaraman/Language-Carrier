today I will talk about how to find minimum spanning tree.
digitacampus here the minimum spanning tree for this graph will consist of three address.
AC and DC so we have 4 what is vsts all the four vertices are connected to each other is the former tree.
video that you know what did join that is because it's a prerequisite to understand this algorithm for discussing disjoint set path compression attitude not already watch that video please watch that video before watching this video send an exception let's try to find minimum spanning tree for this example hear the idea of this algorithm is very simple for tourist which sort the ages in non decreasing order.
using this make side operation of distance that's we create as many days joint set as a number toll number of vertices then one has any time.
h.
quality created 6 different disjoint sets and I want two sorted the ages is not decreasing order so popular spell the batch.
purify the students that so will be added to final result.
John set with more a n.
WhatsApp.
SBC.
joinflex.
this is what is present in money in the system represented by b.
do the union of these two sets.
1 Celsius.
presented by.
ES.
join set.
DJ presented by a n d u presented by which tells us that B and D are in the same distance at right now so I will just ignore this.
HKV.
please also presented by a which type of the state is joint set table is not this adhering.
HCF.
so they are you today factset so will I gain this age.
presented by.
represented by CNG all the states not this.
DJ presented by is represented by that they are also the same the same disjointed will show me again now.
phone.
for this year.
5 stages.
complexity and space complexity is the worst case whatever disjoint set states and whatever this result result so it will be more of.
time complexity for the silent.
it will take more of a lot of time to solve this.
ondestroy set.
operation.
let's look at the code for Android don't like algorithm.
get a minimum spanning tree and it passes a graph.
all the edges of the.
Satish joint set.
who is we create as many disjoint set as a total number of vertices.
we are going to do is a straight through each of the edges in non decreasing order.
every edge get the two vertices of this edge and see if there.
we get the route.
set for for these two word and two vertices of using find operation and check if there in the same.
set then to add this to the final result and also do the.
log e to sort this ages and then go off.
